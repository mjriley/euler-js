/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/

const _ = require('lodash');

function getNextFib(prevTerm1, prevTerm2) {
    if (typeof prevTerm1 === 'undefined') {
        return 1;
    }

    if (typeof prevTerm2 === 'undefined') {
        return 2;
    }

    return prevTerm1 + prevTerm2;
}

function generateFibNotExceedingX(x) {
    // undefined to start with
    let prevTerm1, prevTerm2;

    let numbers = [];

    let nextTerm = getNextFib(prevTerm1, prevTerm2);
    while (nextTerm <= x) {
        numbers.push(nextTerm);
        prevTerm2 = prevTerm1;
        prevTerm1 = nextTerm;

        nextTerm = getNextFib(prevTerm1, prevTerm2);
    }

    return numbers;
}

function getEvenFibNotExceedingX(x) {
    let numbers = generateFibNotExceedingX(x);
    let evenNumbers = _.filter(numbers, number => number % 2 === 0);

    return evenNumbers;
}

function getSumOfEvenFibNotExceedingX(x) {
    let evenNumbers = getEvenFibNotExceedingX(x);
    return _.reduce(evenNumbers, (sum, term) => sum + term);
}

module.exports = {
    getNextFib,
    generateFibNotExceedingX,
    getEvenFibNotExceedingX,
    getSumOfEvenFibNotExceedingX
};

function main() {
    const UPPER_BOUND = 4000000;
    let answer = getSumOfEvenFibNotExceedingX(UPPER_BOUND);

    console.log('answer is: ', answer);
}

main();
